// <auto-generated />
using Fishing_Helper.Model.Db_configurations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fishing_Helper.Migrations
{
    [DbContext(typeof(FishDataContext))]
    partial class FishDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Fishing_Helper.Model.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FishTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PriceId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FishTypeId");

                    b.HasIndex("LocationId")
                        .IsUnique();

                    b.HasIndex("PriceId");

                    b.ToTable("Fishes");
                });

            modelBuilder.Entity("Fishing_Helper.Model.FishType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Bait")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FishTypes");
                });

            modelBuilder.Entity("Fishing_Helper.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("X")
                        .HasColumnType("int");

                    b.Property<int>("Y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Fishing_Helper.Model.Price", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CookTroph")
                        .HasColumnType("int");

                    b.Property<int>("RawReg")
                        .HasColumnType("int");

                    b.Property<int>("RawTroph")
                        .HasColumnType("int");

                    b.Property<int>("СookReg")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Fishing_Helper.Model.Fish", b =>
                {
                    b.HasOne("Fishing_Helper.Model.FishType", "FishType")
                        .WithMany("Variations")
                        .HasForeignKey("FishTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_Helper.Model.Location", "Location")
                        .WithOne("Fish")
                        .HasForeignKey("Fishing_Helper.Model.Fish", "LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fishing_Helper.Model.Price", "Price")
                        .WithMany("Fishes")
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FishType");

                    b.Navigation("Location");

                    b.Navigation("Price");
                });

            modelBuilder.Entity("Fishing_Helper.Model.FishType", b =>
                {
                    b.Navigation("Variations");
                });

            modelBuilder.Entity("Fishing_Helper.Model.Location", b =>
                {
                    b.Navigation("Fish")
                        .IsRequired();
                });

            modelBuilder.Entity("Fishing_Helper.Model.Price", b =>
                {
                    b.Navigation("Fishes");
                });
#pragma warning restore 612, 618
        }
    }
}
